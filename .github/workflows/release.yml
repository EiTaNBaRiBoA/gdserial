name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write  # Required for creating releases and uploading assets

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            lib_name: gdserial.dll
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            lib_name: libgdserial.so
          - os: macos-latest
            target: x86_64-apple-darwin
            lib_name: libgdserial.dylib

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libudev-dev

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        target: ${{ matrix.target }}

    - name: Build release
      run: cargo build --release --target ${{ matrix.target }}
      shell: bash

    - name: Create release directory
      run: mkdir -p release-artifacts
      shell: bash

    - name: Copy library (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir -p addons/gdserial/bin/windows
        cp target/${{ matrix.target }}/release/${{ matrix.lib_name }} addons/gdserial/bin/windows/${{ matrix.lib_name }}
        cp -r addons release-artifacts/
        cp LICENSE release-artifacts/
        cp README.md release-artifacts/
      shell: bash

    - name: Copy library (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir -p addons/gdserial/bin/${{ matrix.os == 'macos-latest' && 'macos' || 'linux' }}
        cp target/${{ matrix.target }}/release/${{ matrix.lib_name }} addons/gdserial/bin/${{ matrix.os == 'macos-latest' && 'macos' || 'linux' }}/${{ matrix.lib_name }}
        cp -r addons release-artifacts/
        cp LICENSE release-artifacts/
        cp README.md release-artifacts/
      shell: bash

    - name: Create archive
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a gdserial-${{ matrix.target }}.zip release-artifacts/*
        else
          tar -czf gdserial-${{ matrix.target }}.tar.gz -C release-artifacts .
        fi
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: gdserial-${{ matrix.target }}
        path: |
          *.zip
          *.tar.gz

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          */gdserial-*.zip
          */gdserial-*.tar.gz
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}